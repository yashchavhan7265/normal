de(
    [1] => Array
        (
            [name] => Introduction to Google Analytics 4 Reporting 
            [price] => $1,098.00
            [date] => Mon 18 Nov, 2024
            [type] =>  Classroom Course
            [attendees] => Array
                (
                    [1] => Array
                        (
                            [name] => YashChavhan
                            [email] => yashch@test.com
                        )

                    [2] => Array
                        (
                            [name] => JaimeenBhat
                            [email] => jaimenb@test.com
                        )

                )

        )

    [2] => Array
        (
            [name] => Google Ads Search: Fundamentals 
            [price] => $549.00
            [date] => Mon 02 Dec, 2024
            [type] =>  Classroom Course
            [attendees] => Array
                (
                    [1] => Array
                        (
                            [name] => JaimeenBhat
                            [email] => jaimenb@test.com
                        )

                )

        )

)





 $rowSet = $this->getCoursesAndParticipant($items, $order,$order->getStoreId());
                        $index  = 1;
                        $subIndex = 1;

                        for ($i = ($_current + 1); $i <= $_mergeCells; $i++) {
                            if (array_key_exists($index, $rowSet)) {
                                if (!empty($rowSet[$index]['attendees'])) {
                                    $participantsCnt = count($rowSet[$index]['attendees']);
                                    $mergeCol        = ($i + ($participantsCnt - 1));
                                    if ($participantsCnt > 1) {
                                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("I{$i}:I{$mergeCol}");
                                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("J{$i}:J{$mergeCol}");
                                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("K{$i}:K{$mergeCol}");
                                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("N{$i}:N{$mergeCol}");
                                    }
                                    for ($j = $i; $j <= $mergeCol; $j++) {
                                        $objSheet->getCell("L{$j}")->setValue($rowSet[$index]['attendees'][$subIndex]['name']);
                                        $objSheet->getCell("M{$j}")->setValue($rowSet[$index]['attendees'][$subIndex]['email']);
                                        $subIndex++;
                                    }
                                }
                                $objSheet->getCell("I{$i}")->setValue($rowSet[$index]['name']);
                                $objSheet->getCell("J{$i}")->setValue($rowSet[$index]['price']);
                                $objSheet->getCell("K{$i}")->setValue($rowSet[$index]['date']);
                                $objSheet->getCell("N{$i}")->setValue($rowSet[$index]['type']);

                                $index++;
                            }//end if
                        }//end for





$rowSet = $this->getCoursesAndParticipant($items, $order, $order->getStoreId());
$index = 1;

for ($i = ($_current + 1); $i <= $_mergeCells; $i++) {
    if (array_key_exists($index, $rowSet)) {
        // Retrieve attendees for the current course
        $attendees = $rowSet[$index]['attendees'];
        
        if (!empty($attendees)) {
            $participantsCnt = count($attendees);
            $mergeCol = ($i + ($participantsCnt - 1));

            if ($participantsCnt > 1) {
                // Merge course cells across multiple attendees
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells("I{$i}:I{$mergeCol}");
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells("J{$i}:J{$mergeCol}");
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells("K{$i}:K{$mergeCol}");
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells("N{$i}:N{$mergeCol}");
            }

            // Loop through each attendee and set their name and email
            $attendeeKeys = array_keys($attendees);  // Get the actual attendee keys
            for ($j = $i, $subIndex = 0; $j <= $mergeCol; $j++, $subIndex++) {
                $attendeeKey = $attendeeKeys[$subIndex];  // Access using the correct attendee key
                $objSheet->getCell("L{$j}")->setValue($attendees[$attendeeKey]['name']);
                $objSheet->getCell("M{$j}")->setValue($attendees[$attendeeKey]['email']);
            }
        }

        // Set course details for the row (merged or single)
        $objSheet->getCell("I{$i}")->setValue($rowSet[$index]['name']);
        $objSheet->getCell("J{$i}")->setValue($rowSet[$index]['price']);
        $objSheet->getCell("K{$i}")->setValue($rowSet[$index]['date']);
        $objSheet->getCell("N{$i}")->setValue($rowSet[$index]['type']);

        // After processing attendees, move $i to the last row of the merged block
        $i = $mergeCol;
        $index++; // Move to the next course
    }
}